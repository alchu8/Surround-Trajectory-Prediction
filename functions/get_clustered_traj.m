function traj_clustered = get_clustered_traj(trajectory_type, W_all, k)
% return cell structure of clustered trajectories after merging
% trajectory_type is generated by trajectoryByType.m
% W_all is generated by SimGraph_Full.m or can be found in 'mat' folder
% k is array of cluster numbers, i.e. [2,4,3,6,4,7,2,7] for 2 clusters in
% type 1, 4 clusters in type 2, etc.
    traj_clustered = cell(8, 1);
    for veh_type = 1:8
        traj_now = trajectory_type{veh_type};
        W_now = W_all{veh_type};
        [~, member_hard, membership_value] = SpectralClustering(W_now, k(veh_type), 3);
        cell_out = Cluster2Cell(member_hard, membership_value, 0.9);
        cell_out = cell_out(~cellfun('isempty',cell_out)); % remove empty cells
        [prototypes_pre, cluster_id] = findk(traj_now, cell_out, membership_value);
        prototypes_post = prototypes_pre(cluster_id, :); % merged cluster prototypes
        
        % plot pre and post merging of prototypes
        figure;
        subplot(1,2,1); hold on;
        legend_str = cell(size(prototypes_pre, 1), 1);
        for p = 1:size(prototypes_pre, 1)
            color = rand(1,3);
            proto = prototypes_pre(p, :);
            proto = [proto(1:2:length(proto)); proto(2:2:length(proto))]; % 2 x L
            plot(proto(1, :), proto(2, :), 'Color', color);
            plot(proto(1, 1), proto(2, 1), 'Color', color, 'Marker', '*');
            legend_str{p} = num2str(p);
        end
        title('Before merge'); legend(legend_str); hold off;
        subplot(1,2,2); hold on;
        legend_str = cell(size(prototypes_post, 1), 1);
        for p = 1:size(prototypes_post, 1)
            color = rand(1,3);
            proto = prototypes_post(p, :);
            proto = [proto(1:2:length(proto)); proto(2:2:length(proto))]; % 2 x L
            plot(proto(1, :), proto(2, :), 'Color', color);
            plot(proto(1, 1), proto(2, 1), 'Color', color, 'Marker', '*');
            legend_str{p} = num2str(p);
        end
        title('After merge'); legend(legend_str); hold off;
        
        traj_cluster = cell(length(cluster_id), 1); % cells of clusters for this type
        for t = 1:length(traj_now) % cluster each trajectory into the reduced set
            traj = traj_now{t, 1}; % 2 x T
            dist = zeros(size(prototypes_post, 1), 1);
            for p = 1:size(prototypes_post, 1) % dist between traj and each proto
                proto = prototypes_post(p, :); % 1 x 2L
                proto = [proto(1:2:length(proto)); proto(2:2:length(proto))]; % 2 x L
                dist(p) = MatLabLCSS(traj', proto', 1, 1);
            end
            [~, c] = min(dist);
            traj_cluster{c, 1}{1+end, 1} = traj; % put traj into cth cluster
        end
        traj_clustered{veh_type} = traj_cluster;
    end
end